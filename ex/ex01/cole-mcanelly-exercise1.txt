# Problem 1

GHCi, version 9.2.5: https://www.haskell.org/ghc/  :? for help
ghci> map reverse ["dog","cat"]
["god","tac"]
ghci> map reverse ["bark","meow"]
["krab","woem"]
ghci> sqrt (4 + 5)
3.0
ghci> sqrt (2 * 8)
4.0
ghci> list1 = [1,3,5,4,2]
ghci> list2 = [2..10]
ghci> head list1
1
ghci> head list2
2
ghci> tail list1
[3,5,4,2]
ghci> tail list2
[3,4,5,6,7,8,9,10]
ghci> list1 !! 2
5
ghci> list2 !! 2
4
ghci> take 4 list1
[1,3,5,4]
ghci> take 5 list2
[2,3,4,5,6]
ghci> drop 2 list1
[5,4,2]
ghci> drop 3 list2
[5,6,7,8,9,10]
ghci> list1 ++ list2
[1,3,5,4,2,2,3,4,5,6,7,8,9,10]
ghci> reverse list1
[2,4,5,3,1]
ghci> reverse list2
[10,9,8,7,6,5,4,3,2]
ghci> length list1
5
ghci> length list2
9
ghci> sum list1
15
ghci> sum list2
54
ghci> product list1
120
ghci> product list2
3628800
ghci> :q
Leaving GHCi.



# Problem 2

Error #1: "lexical error" (used the wrong quotation marks)
    Fixed this by changing both of the â€™s to `s.

Error #2: "parse error" (xs assignment not aligned correctly)
    Fixed this by indenting the xs assignment correctly

Error #3: "Not in scope: data constructor" (used a capital letter instead of lowercase)
    Fixed this by changing the capital N to a lowercase n

Error #4: "No instance for (Fractional Int) arising from a use of (/)"
    This is because when replacing `div` with (/), `div` expects integer types, which we have,
    but (/) expects fractional (or floating points) which we dont have.