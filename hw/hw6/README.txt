
/* Written by Hyunyoung Lee for CSCE 314 Students Homework 6 Problem 1

   Student Name: 	Cole McAnelly
   UIN:			630003358
   Acknowledgements:	N/A
*/

======================
=====   Part 1   =====
======================

=== Problem 2

To both compile and run my code, you simply execute `javac Market.java ; java Main`.
The final output will look like this:
```bash
$ javac Market.java ; java Main
Here's what I bought
Apple
Gala
Apple
Apple
Gala
Fruit
Enjoy!
```


=== Problem 3

To both compile and run my code, you simply execute `javac SimBox.java SimMain.java ; java SimMain`.
The final output will look like this:
```bash
$  javac SimBox.java SimMain.java ; java SimMain
From Homer to Marge: My doctor said don't walk.
From Marge to Homer: That was a traffic signal!
From Bart to Homer: There’s a 4:30 in the morning now?
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Homer to Bart: D'oh!
```

```bash
$  javac SimBox.java SimMain.java ; java SimMain
From Homer to Marge: My doctor said don't walk.
From Marge to Homer: That was a traffic signal!
From Bart to Homer: There’s a 4:30 in the morning now?
From Homer to Bart: D'oh!
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
From Bart to Homer: flooding the message queue...
```

The output for this problem is not always the same because of the fact that we are using multithreading.
This will create instances where certain messages show up before others sometimes when executed.


======================
=====   Part 2   =====
======================

We must synchronize the message queues so that the data is not edited at the same time by 2 different threads,
this would create a race condition where only the changes made by 1 thread are saved and correctly represented.

Additionally, this code will not create a deadlock, because there are no conditions to hold the code up,
waiting for other threads. Unlike the exercise 11 where there was a condition that had to be met before editing data,
this just needs to acquire the lock and then can proceed continually until releasing the lock.



